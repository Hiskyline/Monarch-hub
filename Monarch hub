<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blox Fruits ESP Locator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .map-container {
            position: relative;
            background-image: url('https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/305651fa-07ca-46e8-957f-8c0ded1973ef.png');
            background-size: cover;
        }
        .fruit-marker {
            position: absolute;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: rgba(255, 0, 0, 0.7);
            border: 2px solid white;
            animation: pulse 1.5s infinite;
        }
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <div class="container mx-auto px-4 py-8">
        <header class="mb-10 text-center">
            <div class="flex items-center justify-center mb-4">
                <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/50fde946-9be3-4256-937b-c9aeaa102b70.png" alt="Monarch Hub Logo" class="mr-4">
                <h1 class="text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-500 to-red-500">MONARCH HUB</h1>
            </div>
            
            <div class="tabs flex justify-center mb-6">
                <button class="tab-btn px-6 py-2 bg-gray-700 rounded-l-lg" data-tab="esp">ESP</button>
                <button class="tab-btn px-6 py-2 bg-gray-700" data-tab="tp">Teleport</button>
                <button class="tab-btn px-6 py-2 bg-gray-700 rounded-r-lg" data-tab="settings">Settings</button>
            </div>
            
            <div class="tab-content active" id="esp-tab">

        </div> <!-- end esp-tab -->
        
        <div class="tab-content hidden" id="tp-tab">
            <h2 class="text-3xl mb-6">Teleport Options</h2>
            <p class="text-gray-400">Coming soon</p>
        </div>

        <div class="tab-content hidden" id="settings-tab">
            <h2 class="text-3xl mb-6">Settings</h2>
            <p class="text-gray-400">Coming soon</p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-10">
            <div class="bg-gray-800 p-6 rounded-xl">
                <h2 class="text-2xl font-bold mb-6">Control Panel</h2>
                <div class="space-y-4">
                    <div>
                        <label class="block mb-2">Webhook URL</label>
                        <input type="text" id="webhook-url" placeholder="Your Discord webhook URL" class="w-full px-3 py-2 bg-gray-700 rounded">
                    </div>
                    <div>
                        <label class="block mb-2">Scan Interval (seconds)</label>
                        <input type="number" id="scan-interval" value="60" class="w-full px-3 py-2 bg-gray-700 rounded">
                    </div>
                    <button id="start-btn" class="w-full py-2 bg-green-600 rounded">Start</button>
                    <button id="stop-btn" class="w-full py-2 bg-red-600 rounded" disabled>Stop</button>
                </div>
            </div>

            <div class="bg-gray-800 p-6 rounded-xl">
                <h2 class="text-2xl font-bold mb-6">Fruits Tracked</h2>
                <div class="grid grid-cols-3 gap-3">
                    <div class="fruit-icon" data-fruit="spider">
                        <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/9a6b162a-b064-46ca-b204-1fa4b0a8d64d.png" alt="Spider fruit" class="rounded cursor-pointer">
                    </div>
                    <div class="fruit-icon" data-fruit="flame">
                        <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/258f4e2d-ac93-4137-b556-e796693ac151.png" alt="Flame fruit" class="rounded cursor-pointer">
                    </div>
                    <div class="fruit-icon" data-fruit="ice">
                        <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/b90ec3f7-59ce-41cc-bcea-be7374aa7d11.png" alt="Ice fruit" class="rounded cursor-pointer">
                    </div>
                    <div class="fruit-icon" data-fruit="light">
                        <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/c985de06-ae52-47eb-a1c7-eb50664a104b.png" alt="Light fruit" class="rounded cursor-pointer">
                    </div>
                    <div class="fruit-icon" data-fruit="quake">
                        <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/bdf25104-e833-48d4-a891-54a4274a3800.png" alt="Quake fruit" class="rounded cursor-pointer">
                    </div>
                    <div class="fruit-icon" data-fruit="dark">
                        <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/e310cfb8-8346-4ea9-8fda-d0f81295ca91.png" alt="Dark fruit" class="rounded cursor-pointer">
                    </div>
                </div>
            </div>

            <div class="bg-gray-800 p-6 rounded-xl">
                <h2 class="text-2xl font-bold mb-6">Status</h2>
                <div>
                    <p>Last Scan: <span id="last-scan" class="font-mono">Never</span></p>
                    <p>Fruits Found: <span id="fruits-found" class="font-mono">0</span></p>
                    <p>Webhook: <span id="webhook-status" class="font-mono">Not connected</span></p>
                </div>
            </div>
        </div>

        <div class="map-container w-full h-96 rounded-xl mb-8">
            <div id="map-markers"></div>
        </div>

        <div class="bg-gray-800 p-6 rounded-xl">
            <h2 class="text-2xl font-bold mb-4">Detected Fruits</h2>
            <table class="w-full">
                <thead>
                    <tr>
                        <th class="text-left p-2">Fruit</th>
                        <th class="text-left p-2">Location</th>
                        <th class="text-left p-2">Time</th>
                    </tr>
                </thead>
                <tbody id="fruit-table">
                    <tr>
                        <td colspan="3" class="text-center p-4 text-gray-500">No fruits detected</td>
                    </tr>
                </tbody>
            </table>
            <button id="export-btn" class="mt-4 px-4 py-2 bg-blue-600 rounded">Export Data</button>
        </div>
    </div>

    <script>
        // Tab switching functionality
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                document.querySelectorAll('.tab-content').forEach(tab => {
                    tab.classList.add('hidden');
                    tab.classList.remove('active');
                });
                document.getElementById(`${btn.dataset.tab}-tab`).classList.remove('hidden');
                document.getElementById(`${btn.dataset.tab}-tab`).classList.add('active');
                
                document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('bg-blue-600'));
                btn.classList.add('bg-blue-600');
            });
        });

        const selectedFruits = new Set();
        const foundFruits = [];
        let scanInterval = null;

        document.querySelectorAll('.fruit-icon').forEach(icon => {
            icon.addEventListener('click', () => {
                const fruit = icon.dataset.fruit;
                if (selectedFruits.has(fruit)) {
                    selectedFruits.delete(fruit);
                    icon.querySelector('img').style.opacity = '0.5';
                } else {
                    selectedFruits.add(fruit);
                    icon.querySelector('img').style.opacity = '1';
                }
            });
        });

        document.getElementById('start-btn').addEventListener('click', () => {
            if (selectedFruits.size === 0) {
                alert('Select at least one fruit');
                return;
            }

            const interval = parseInt(document.getElementById('scan-interval').value) * 1000;
            scanInterval = setInterval(scanForFruits, interval);
            document.getElementById('start-btn').disabled = true;
            document.getElementById('stop-btn').disabled = false;
            scanForFruits();
        });

        document.getElementById('stop-btn').addEventListener('click', () => {
            clearInterval(scanInterval);
            document.getElementById('start-btn').disabled = false;
            document.getElementById('stop-btn').disabled = true;
        });

        async function scanForFruits() {
            // Simulate finding fruits
            const fruitsFound = simulateFindFruits();
            foundFruits.push(...fruitsFound);
            updateDisplay(fruitsFound);
            
            // Try to send webhook
            const webhookUrl = document.getElementById('webhook-url').value;
            if (webhookUrl) {
                await sendToWebhook(fruitsFound);
            }

            document.getElementById('last-scan').textContent = new Date().toLocaleTimeString();
        }

        function simulateFindFruits() {
            const fruits = [];
            if (Math.random() > 0.5) {
                fruits.push({
                    type: Array.from(selectedFruits)[Math.floor(Math.random() * selectedFruits.size)],
                    x: Math.random(),
                    y: Math.random(),
                    time: new Date()
                });
            }
            return fruits;
        }

        async function sendToWebhook(fruits) {
            try {
                const response = await fetch(document.getElementById('webhook-url').value, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        content: `Found ${fruits.length} new Blox Fruits!`,
                        embeds: fruits.map(fruit => ({
                            title: `Found ${fruit.type} fruit`,
                            description: `Location: ${fruit.x.toFixed(2)}, ${fruit.y.toFixed(2)}`,
                            color: 0x00ff00
                        }))
                    })
                });
                document.getElementById('webhook-status').textContent = response.ok ? 'Sent' : 'Failed';
            } catch (e) {
                document.getElementById('webhook-status').textContent = 'Error';
            }
        }

        function updateDisplay(fruits) {
            document.getElementById('fruits-found').textContent = foundFruits.length;
            
            // Update map markers
            const markersContainer = document.getElementById('map-markers');
            markersContainer.innerHTML = '';
            fruits.forEach(fruit => {
                const marker = document.createElement('div');
                marker.className = 'fruit-marker';
                marker.style.left = `${fruit.x * 100}%`;
                marker.style.top = `${fruit.y * 100}%`;
                markersContainer.appendChild(marker);
            });
            
            // Update table
            const tableBody = document.getElementById('fruit-table');
            tableBody.innerHTML = '';
            foundFruits.forEach(fruit => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="p-2">${fruit.type}</td>
                    <td class="p-2">${fruit.x.toFixed(2)}, ${fruit.y.toFixed(2)}</td>
                    <td class="p-2">${fruit.time.toLocaleTimeString()}</td>
                `;
                tableBody.appendChild(row);
            });
        }

        document.getElementById('export-btn').addEventListener('click', () => {
            const data = JSON.stringify(foundFruits, null, 2);
            const blob = new Blob([data], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'blox-fruits-data.json';
            a.click();
        });
    </script>
</body>
</html>
