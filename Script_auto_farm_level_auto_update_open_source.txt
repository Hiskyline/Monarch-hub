-- Monarch of Curiosity Hub
-- Base Loader (AutoFarm Tab)

repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer
local plr = game.Players.LocalPlayer

--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

--// Config Save/Load
local configFile = "monarch_settings.json"
local Config = {
    AutoFarm = false,
    AutoQuest = true,
    FastAttack = false,
    Weapon = "Melee"
}

local function SaveConfig()
    writefile(configFile, HttpService:JSONEncode(Config))
end

local function LoadConfig()
    if isfile(configFile) then
        local data = HttpService:JSONDecode(readfile(configFile))
        for k,v in pairs(data) do
            Config[k] = v
        end
    end
end
LoadConfig()

--// Rayfield UI
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Monarch of Curiosity",
    LoadingTitle = "Monarch of Curiosity Hub",
    LoadingSubtitle = "by Monarch",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MonarchHub",
        FileName = "Config"
    },
    Discord = {
        Enabled = false,
    },
    KeySystem = false
})

-- Tabs
local AutoFarmTab = Window:CreateTab("ðŸŒ± AutoFarm")

-- Toggles
AutoFarmTab:CreateToggle({
    Name = "Enable AutoFarm",
    CurrentValue = Config.AutoFarm,
    Flag = "AutoFarmToggle",
    Callback = function(v)
        Config.AutoFarm = v
        SaveConfig()
    end
})

AutoFarmTab:CreateToggle({
    Name = "Auto Quest",
    CurrentValue = Config.AutoQuest,
    Flag = "AutoQuestToggle",
    Callback = function(v)
        Config.AutoQuest = v
        SaveConfig()
    end
})

AutoFarmTab:CreateToggle({
    Name = "Fast Attack",
    CurrentValue = Config.FastAttack,
    Flag = "FastAttackToggle",
    Callback = function(v)
        Config.FastAttack = v
        SaveConfig()
    end
})

-- Dropdown
AutoFarmTab:CreateDropdown({
    Name = "Weapon",
    Options = {"Melee", "Sword", "Fruit"},
    CurrentOption = {Config.Weapon},
    MultipleOptions = false,
    Flag = "WeaponDropdown",
    Callback = function(opt)
        Config.Weapon = opt[1]
        SaveConfig()
    end
})

--// AutoFarm Logic (simple base from your script)
local function GetQuestForLevel(level)
    if level <= 10 then
        return {
            Mob = "Bandit [Lv. 5]",
            QuestName = "BanditQuest1",
            QuestLevel = 1,
            QuestCFrame = CFrame.new(1062, 16, 1546)
        }
    end
    return nil
end

task.spawn(function()
    while task.wait() do
        if Config.AutoFarm then
            local level = plr.Data.Level.Value
            local quest = GetQuestForLevel(level)
            if quest then
                if Config.AutoQuest and plr.PlayerGui.Main.Quest.Visible == false then
                    plr.Character.HumanoidRootPart.CFrame = quest.QuestCFrame
                    task.wait(0.5)
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", quest.QuestName, quest.QuestLevel)
                else
                    for _, mob in pairs(workspace.Enemies:GetChildren()) do
                        if mob.Name == quest.Mob and mob:FindFirstChild("HumanoidRootPart") then
                            plr.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0,10,0)
                            if Config.FastAttack then
                                pcall(function()
                                    game:GetService("VirtualUser"):CaptureController()
                                    game:GetService("VirtualUser"):Button1Down(Vector2.new(0,1,0,1))
                                end)
                            end
                        end
                    end
                end
            end
        end
    end
end)
